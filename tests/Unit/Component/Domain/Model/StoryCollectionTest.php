<?php

namespace LarsNieuwenhuizen\ClubhouseConnector\Tests\Unit\Component\Domain\Model;

use LarsNieuwenhuizen\ClubhouseConnector\Component\Domain\Model\StoryCollection;
use LarsNieuwenhuizen\ClubhouseConnector\Component\Epics\Domain\Model\Epic;
use LarsNieuwenhuizen\ClubhouseConnector\Component\Stories\Domain\Model\Story;
use PHPUnit\Framework\TestCase;

class StoryCollectionTest extends TestCase
{

    private StoryCollection $subject;

    protected function setUp(): void
    {
        $this->subject = new StoryCollection();
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testExceptionIsThrownWhenNonStoryComponentsAreAdded(): void
    {
        $this->expectException(\DomainException::class);
        $this->expectExceptionMessage('Only stories can be added in this collection');

        $epic = new Epic();
        $this->subject->addComponent($epic);
    }

    public function testStoriesCanBeAdded(): void
    {
        $story = new Story();

        $this->subject->addComponent($story);
        $this->assertCount(1, $this->subject);
    }

    public function testArrayCanBeReturnedForBulkCreation()
    {
        $story = new Story();
        $story->setName('test')
            ->setProjectId(1);
        $data = $story->toArrayForCreation();
        $this->subject->addComponent($story);
        $expectedResult = [
            'stories' => [
                $data
            ]
        ];

        $this->assertEquals($expectedResult, $this->subject->toArrayForBulkCreation());
    }
}
